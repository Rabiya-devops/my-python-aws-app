version: 0.2

# --- ENVIRONMENT VARIABLES (Pulling secrets from Parameter Store) ---
env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password
    DOCKER_REGISTRY_URL: /myapp/docker-registry/url

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Install phase - Python runtime 3.11 ready."

  pre_build:
    commands:
      - echo "Installing Python dependencies..."
      - pip install -r requirements.txt
      - echo "Starting Docker build process."

  build:
    commands:
      - echo "Logging in to Docker registry..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - export IMAGE_REPO_NAME="$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app"
      - export IMAGE_TAG="$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - export IMAGE_TAG_LATEST="$IMAGE_REPO_NAME:latest"
      - echo "Building Docker image with unique tag: $IMAGE_TAG"
      - docker build -t "$IMAGE_TAG" .
      - echo "Tagging image with 'latest'..."
      - docker tag "$IMAGE_TAG" "$IMAGE_TAG_LATEST"
      - echo "Pushing image to Docker Hub..."
      - docker push "$IMAGE_TAG"
      - docker push "$IMAGE_TAG_LATEST"

  post_build:
    commands:
      - echo "Creating imagedefinitions.json file..."
      - printf '[{"name":"my-python-app-container","imageUri":"%s"}]' "$IMAGE_TAG" > imagedefinitions.json
      - cat imagedefinitions.json
      - echo "Build and Push to Docker Hub completed successfully!"

artifacts:
  files:
    - appspec.yml
    - start_container.sh
    - stop_container.sh
    - imagedefinitions.json
