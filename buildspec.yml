version: 0.2
phases:
  pre_build:
    commands:
      - echo "Retrieving Docker Hub credentials from Parameter Store..."
      # Retrieve username and password from AWS Parameter Store
      - DOCKERHUB_USERNAME=$(aws ssm get-parameter --name "dockerhub-username" --with-decryption --query Parameter.Value --output text)
      - DOCKERHUB_PASSWORD=$(aws ssm get-parameter --name "dockerhub-password" --with-decryption --query Parameter.Value --output text)
      
      # 1. Login to Docker Hub using the retrieved credentials
      - echo "Logging in to Docker Hub..."
      # Replace <YOUR_DOCKERHUB_USERNAME> with your actual username
      - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD 
      
      # Define your full image path (replace with your Docker Hub username and image name)
      - FULL_IMAGE_NAME=<YOUR_DOCKERHUB_USERNAME>/my-python-app
      
  build:
    commands:
      # 2. Build the Docker image
      - echo "Building the Docker image..."
      - docker build -t $FULL_IMAGE_NAME .
      # 3. Tag the image
      - docker tag $FULL_IMAGE_NAME:latest $FULL_IMAGE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      
  post_build:
    commands:
      # 4. Push images to Docker Hub
      - echo "Pushing the Docker image to Docker Hub..."
      - docker push $FULL_IMAGE_NAME:latest
      - docker push $FULL_IMAGE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      
      # 5. Create the image definition file for CodeDeploy
      # This points CodeDeploy to the Docker Hub image
      - printf '[{"name":"my-python-app-container","imageUri":"%s"}]' $FULL_IMAGE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json

artifacts:
  files:
    - appspec.yml
    - start_container.sh
    - stop_container.sh
    - imagedefinitions.json
